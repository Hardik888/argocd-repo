apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: demo-web
  name: demo-web
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: demo-web
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/ruby-rails-default: "true"
        io.kompose.service: demo-web
    spec:
      containers:
        - args:
            - ./bin/rails
            - server
          env:
            - name: POSTGRES_DB
              value: demodb_production
            - name: POSTGRES_HOST
              value: db
            - name: POSTGRES_HOST_AUTH_METHOD
              value: trust
            - name: POSTGRES_PASSWORD
              value: root
            - name: POSTGRES_USER
              value: postgres
            - name: RAILS_ENV
              value: production
            - name: RAILS_MASTER_KEY
              value: ff32c6f408652e4dba19d65f1a2cf5ab
          name: ruby-rails-demo-web
          image: hardik89990/ruby-rails-demo-web:version1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              hostPort: 3000
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /rails/storage
              name: app-storage
      restartPolicy: Always
      volumes:
        - name: app-storage
          persistentVolumeClaim:
            claimName: app-storage
status: {}
